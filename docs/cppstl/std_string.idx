CppString	cppstl/std_string.html#CppString	std_string: CppString	
CppStrIterator	cppstl/std_string.html#CppStrIterator	std_string: CppStrIterator	
CppStrConstIterator	cppstl/std_string.html#CppStrConstIterator	std_string: CppStrConstIterator	
initCppString	cppstl/std_string.html#initCppString	std_string: initCppString(): CppString	
initCppString	cppstl/std_string.html#initCppString,CppString	std_string: initCppString(str: CppString): CppString	
initCppString	cppstl/std_string.html#initCppString,CppString,csize_t	std_string: initCppString(str: CppString; pos: csize_t): CppString	
initCppString	cppstl/std_string.html#initCppString,CppString,csize_t,csize_t	std_string: initCppString(str: CppString; pos, len: csize_t): CppString	
initCppString	cppstl/std_string.html#initCppString,cstring	std_string: initCppString(s: cstring): CppString	
initCppString	cppstl/std_string.html#initCppString,cstring,csize_t	std_string: initCppString(s: cstring; n: csize_t): CppString	
initCppString	cppstl/std_string.html#initCppString,CppStrConstIterator,CppStrConstIterator	std_string: initCppString(first, last: CppStrConstIterator): CppString	
`+=`	cppstl/std_string.html#+=,CppString,cstring	std_string: `+=`(self: var CppString; str: cstring)	
append	cppstl/std_string.html#append,CppString,cstring	std_string: append(self: var CppString; str: cstring)	
append	cppstl/std_string.html#append,CppString,cstring,csize_t	std_string: append(self: var CppString; str: cstring; n: csize_t)	
assign	cppstl/std_string.html#assign,CppString,cstring	std_string: assign(self: var CppString; str: cstring)	
assign	cppstl/std_string.html#assign,CppString,cstring,csize_t	std_string: assign(self: var CppString; str: cstring; n: csize_t)	
insert	cppstl/std_string.html#insert,CppString,csize_t,cstring	std_string: insert(self: var CppString; pos: csize_t; s: cstring)	
insert	cppstl/std_string.html#insert,CppString,csize_t,cstring,csize_t	std_string: insert(self: var CppString; pos: csize_t; s: cstring; n: csize_t)	
replace	cppstl/std_string.html#replace,CppString,csize_t,csize_t,cstring	std_string: replace(self: var CppString; pos, l: csize_t; s: cstring)	
replace	cppstl/std_string.html#replace,CppString,CppStrConstIterator,CppStrConstIterator,cstring	std_string: replace(self: var CppString; i1, i2: CppStrConstIterator; s: cstring)	
replace	cppstl/std_string.html#replace,CppString,csize_t,csize_t,cstring,csize_t	std_string: replace(self: var CppString; pos, l: csize_t; s: cstring; n: csize_t)	
replace	cppstl/std_string.html#replace,CppString,CppStrConstIterator,CppStrConstIterator,cstring,csize_t	std_string: replace(self: var CppString; i1, i2: CppStrConstIterator; s: cstring; n: csize_t)	
cStr	cppstl/std_string.html#cStr,CppString	std_string: cStr(self: CppString): cstring	
find	cppstl/std_string.html#find,CppString,cstring,csize_t	std_string: find(self: CppString; s: cstring; pos: csize_t = 0): csize_t	
find	cppstl/std_string.html#find,CppString,cstring,csize_t,csize_t	std_string: find(self: CppString; s: cstring; pos, n: csize_t): csize_t	
rfind	cppstl/std_string.html#rfind,CppString,cstring,csize_t	std_string: rfind(self: CppString; s: cstring; pos: csize_t = std_npos): csize_t	
rfind	cppstl/std_string.html#rfind,CppString,cstring,csize_t,csize_t	std_string: rfind(self: CppString; s: cstring; pos, n: csize_t): csize_t	
findFirstOf	cppstl/std_string.html#findFirstOf,CppString,cstring,csize_t	std_string: findFirstOf(self: CppString; s: cstring; pos: csize_t = 0): csize_t	
findFirstOf	cppstl/std_string.html#findFirstOf,CppString,cstring,csize_t,csize_t	std_string: findFirstOf(self: CppString; s: cstring; pos, n: csize_t): csize_t	
findLastOf	cppstl/std_string.html#findLastOf,CppString,cstring,csize_t	std_string: findLastOf(self: CppString; s: cstring; pos: csize_t = std_npos): csize_t	
findLastOf	cppstl/std_string.html#findLastOf,CppString,cstring,csize_t,csize_t	std_string: findLastOf(self: CppString; s: cstring; pos, n: csize_t): csize_t	
findFirstNotOf	cppstl/std_string.html#findFirstNotOf,CppString,cstring,csize_t	std_string: findFirstNotOf(self: CppString; s: cstring; pos: csize_t = 0): csize_t	
findFirstNotOf	cppstl/std_string.html#findFirstNotOf,CppString,cstring,csize_t,csize_t	std_string: findFirstNotOf(self: CppString; s: cstring; pos, n: csize_t): csize_t	
findLastNotOf	cppstl/std_string.html#findLastNotOf,CppString,cstring,csize_t	std_string: findLastNotOf(self: CppString; s: cstring; pos: csize_t = std_npos): csize_t	
findLastNotOf	cppstl/std_string.html#findLastNotOf,CppString,cstring,csize_t,csize_t	std_string: findLastNotOf(self: CppString; s: cstring; pos, n: csize_t): csize_t	
compare	cppstl/std_string.html#compare,CppString,cstring	std_string: compare(self: CppString; s: cstring): cint	
compare	cppstl/std_string.html#compare,CppString,csize_t,csize_t,cstring	std_string: compare(self: CppString; pos, l: csize_t; str: cstring): cint	
compare	cppstl/std_string.html#compare,CppString,csize_t,csize_t,cstring,csize_t	std_string: compare(self: CppString; pos, l: csize_t; str: cstring; n: csize_t): cint	
compare	cppstl/std_string.html#compare,CppString,csize_t,csize_t,cstring,csize_t,csize_t	std_string: compare(self: CppString; pos, l: csize_t; str: cstring; subpos, subl: csize_t): cint	
CppStrIteratorToStrConstIterator	cppstl/std_string.html#CppStrIteratorToStrConstIterator.c,CppStrIterator	std_string: CppStrIteratorToStrConstIterator(s: CppStrIterator): CppStrConstIterator	
initCppString	cppstl/std_string.html#initCppString,string	std_string: initCppString(s: string): CppString	
`+`	cppstl/std_string.html#+,CppString,	std_string: `+`(a: CppString; b: string | cstring): CppString	
`+`	cppstl/std_string.html#+,,CppString	std_string: `+`(a: string | cstring; b: CppString): CppString	
`==`	cppstl/std_string.html#==,CppString,	std_string: `==`(a: CppString; b: string | cstring): bool	
`==`	cppstl/std_string.html#==,,CppString	std_string: `==`(a: string | cstring; b: CppString): bool	
`!=`	cppstl/std_string.html#!=,CppString,	std_string: `!=`(a: CppString; b: string | cstring): bool	
`!=`	cppstl/std_string.html#!=,,CppString	std_string: `!=`(a: string | cstring; b: CppString): bool	
`&lt;`	cppstl/std_string.html#<,CppString,	std_string: `&lt;`(a: CppString; b: string | cstring): bool	
`&lt;`	cppstl/std_string.html#<,,CppString	std_string: `&lt;`(a: string | cstring; b: CppString): bool	
`&lt;=`	cppstl/std_string.html#<=,CppString,	std_string: `&lt;=`(a: CppString; b: string | cstring): bool	
`&lt;=`	cppstl/std_string.html#<=,,CppString	std_string: `&lt;=`(a: string | cstring; b: CppString): bool	
`&gt;`	cppstl/std_string.html#>,CppString,	std_string: `&gt;`(a: CppString; b: string | cstring): bool	
`&gt;`	cppstl/std_string.html#>,,CppString	std_string: `&gt;`(a: string | cstring; b: CppString): bool	
`&gt;=`	cppstl/std_string.html#>=,CppString,	std_string: `&gt;=`(a: CppString; b: string | cstring): bool	
`&gt;=`	cppstl/std_string.html#>=,,CppString	std_string: `&gt;=`(a: string | cstring; b: CppString): bool	
toCppString	cppstl/std_string.html#toCppString,string	std_string: toCppString(s: string): CppString	
toString	cppstl/std_string.html#toString,CppString	std_string: toString(s: CppString): string	
`$`	cppstl/std_string.html#$,CppString	std_string: `$`(s: CppString): string	
